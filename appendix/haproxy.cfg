# Пример работы по схеме:
#
# КЛИЕНТ <-- TLS-соединение с односторонней аутентификацией (белорусские криптонаборы) --> HAPROXY <-- TLS-соединение с односторонней аутентификацией --> WEB-СЕРВЕР
#
# Примечание:
# В случае соединения по 443 КЛИЕНТ устанавливает tls-соединение с HAPROXY и, в случае успеха, HAPROXY передает КЛИЕНТУ данные своего соединения с WEB-СЕРВЕРОМ dev.avest.by:443)
# В случае соединения по 80 HAPROXY передает КЛИЕНТУ данные соединения с dev.avest.by:80
#
# Для работы HAPROXY требуется:
# 1. Файл с данными сертификата сервера (/opt/AvTLSSrv/conf/TLS/server.cer.pem).
# 2. Файл с личным ключом соответствующим сертификату (в том же файле, что и сертификат либо в файле server.cer.pem.key).
# 3. Файл с цепочкой сертификатов УЦ (от издателя до самоподписанного, важен порядок) для сертификата сервера в каталоге /opt/AvTLSSrv/conf/TLS/chain (см. переменную issuers-chain-path).
#
# Примечание: 
# Для конкретной реализации необходимо заменить в разделах backend http_out и backend https_out подстроки dev.avest.by" на корректный адрес WEB-СЕРВЕРА
#
# HAPROXY при установке TLS-соединения с WEB-СЕРВЕРОМ может использовать варианты (см. раздел backend https_out):
# - TLS-соединение без проверки сертификатов сервера ("verify none" опции server)
# - TLS-соединение с проверкой сертификата сервера (необходим файл с сертификатами УЦ сервера см. параметр ca-file опции server)

global
	# Для включения записи протокола событий в файл необходимо:
	# 1. Расскомментарить все строки в этом файле
	#    с настройками, имеющим отношение к протоколам событий
	#
	# 2. Скорректировать /etc/rsyslog.conf 
	#    расскоментировать разделы с imudp, imtcp
        #    добавить строку
	#     local0.* /var/log/haproxy.log
	#
	# 4. Перезапустит rsyslog - sudo systemctl restart rsyslog

	# Вести обработку в файл с протоколом событий на 127.0.0.1 сохраняя в local0
#	log 127.0.0.1 local0 info

#	chroot /opt/AvTLSSrv
#	stats socket /opt/AvTLSSrv/logs/haproxy-admin.sock mode 660 level admin

#	stats timeout 30s
#	user haproxy
#	group haproxy

	daemon
	pidfile /opt/AvTLSSrv/run/haproxy.pid
	
	# Загрузка avstb engine (openssl) - белорусские криптоалгоритмы
	# (должно быть выше всего криптографического)
# не используется, начиная с haproxy версии 2.7
#	ssl-engine avstb algo ALL

	# каталог с файлами, в каждом из которых сертификаты УЦ из цепочки сертификатов сервера, передаваемой клиенту
	# (от сертификата издателя до самоподписанного сертификат, порядок важен, самоподписанный не обязателен)
#	ca-base /opt/AvTLSSrv/conf/TLS/ca
	# Путь к файлам с сертификатами и личными ключами сервера
#	crt-base /opt/AvTLSSrv/conf/TLS

	# каталог с файлами, в каждом из которых сертификаты УЦ из цепочки сертификатов сервера, передаваемой клиенту
	# (от сертификата издателя до самоподписанного сертификат, порядок важен, самоподписанный не обязателен)
	issuers-chain-path /opt/AvTLSSrv/conf/TLS/chain

	# параметры по умолчанию для bind в разделе frontend
	ssl-default-bind-ciphers DHT-BIGN-WITH-BELT-CTR-MAC-HBELT:DHE-BIGN-WITH-BELT-CTR-MAC-HBELT:DHT-BIGN-WITH-BELT-DWP-HBELT:DHE-BIGN-WITH-BELT-DWP-HBELT
	# отключить возобнобновление сессии по состоянию сервера, сохраненному у клиента, использовать TLS 1.2
	ssl-default-bind-options no-tls-tickets force-tlsv12

	# параметры по умолчанию для server в разделе backend
#	ssl-default-server-ciphers DHT-BIGN-WITH-BELT-CTR-MAC-HBELT:DHE-BIGN-WITH-BELT-CTR-MAC-HBELT:DHT-BIGN-WITH-BELT-DWP-HBELT:DHE-BIGN-WITH-BELT-DWP-HBELT:ALL

defaults
	mode	tcp

	# Добавлять в протокол события о трафике
#	log	global
	# Определение расширенного формата записей протокола события
#	option	tcplog
	# Вывод сообщений в консоль при запуске с ключом "-d"
#	log stdout format short daemon          # send log to systemd
#	log stdout format raw daemon            # send everything to stdout
#	log stderr format raw daemon notice     # send important events to stderr

	timeout connect 5000
	timeout client  50000
	timeout server  50000
	
frontend http_in
	mode http
	# Определение расширенного формата записей протокола события
	# добавляются сообщения о HTTP-запросах, состоянии сеанса и таймеров
#	option	httplog
	bind *:80
	default_backend http_out

backend http_out
	mode http
	balance roundrobin

	# Проброс соединения на dev.avest.by
	server node dev.avest.by:80 maxconn 50 check

frontend https_in
	mode tcp

	# соединение с односторонней аутентификацией (только сервера)
	# цепочка сертификатов УЦ, передаваемая клиенту, формируется исходя из содержимого файлов каталога, заданного в опции issuers-chain-path (см.выше)
	bind *:443 ssl crt /opt/AvTLSSrv/conf/TLS/server.cer.pem

	default_backend https_out

backend https_out
	mode tcp
	balance roundrobin
	
	# соединение по TLS без проверки сертификата сервера
	server node dev.avest.by:443 ssl verify none
